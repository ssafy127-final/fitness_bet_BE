<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.fitnessbet.betting.model.dao.BettingDao">

	<resultMap type="Betting" id="BettingWithChallengerInfo" autoMapping="true">
		<id property="id" column="id"/>
		<association property="challengeUser" javaType="User" autoMapping="true">
			<id property="id" column="userid"/>
		</association>
		<association property="history" javaType="BettingHistory" autoMapping="true">
			<id property="id" column="historyid"/>
		</association>
		<association property="mission" javaType="Mission" autoMapping="true">
			<id property="id" column="missionid"/>
		</association>
	</resultMap>
	
	<resultMap type="BettingHistory" id="BettingHistoryWithBettingInfo" autoMapping="true">
		<id property="id" column="id"/>
		<association property="betting" resultMap="BettingWithChallengerInfo" autoMapping="true">
			<id property="id" column="betid"/>
		</association>
	</resultMap>
	
	<resultMap type="Betting" id="BettingWithReview" autoMapping="true">
		<id property="id" column="id"/>
		<collection property="reviews" resultMap="reviewMap" autoMapping="true"></collection>
	</resultMap>
	
	<resultMap type="Review" id="reviewMap" autoMapping="true">
		<id property="id" column="reviewid"/>
		<result property="regDate" column="reviewreg"/>
	</resultMap>

	<select id="selectAll" resultMap="BettingWithChallengerInfo" parameterType="Betting">
		SELECT B.id, B.challenger, B.mission_id, B.mission_cnt, B.success_cnt, B.fail_cnt, B.success_point, B.fail_point, B.result, B.reg_date, U.id userid, U.campus, U.class_num, U.name, BH.id historyid, BH.point, BH.player, BH.choice, M.id missionid, M.content
		  FROM BETTING B
		 INNER JOIN USER U
		    ON B.challenger = U.id
		 INNER JOIN MISSION M
		    ON M.id = B.mission_id
		  LEFT OUTER JOIN BETTING_HISTORY BH
		    ON B.id = BH.betting_id
		   AND U.id = BH.player
		 WHERE U.campus = #{loginUser.campus}
		   AND U.class_num = #{loginUser.classNum}
		   <if test="result == 0">
		   AND (B.result = 0 OR B.result = 2)
		   </if>
		   <if test="result != 0">
		   AND (B.result = 1 OR B.result = -1)
		   </if>
	</select>
	<select id="selectOneBettingDetail" parameterType="int" resultMap="BettingWithChallengerInfo">
		SELECT B.id, B.challenger, B.mission_id, B.mission_cnt, B.success_cnt, B.fail_cnt, B.success_point, B.fail_point, B.result, B.reg_date, U.id userid, U.campus, U.class_num, U.name, BH.id historyid, BH.point, BH.choice, M.id missionid, M.content
		  FROM BETTING B
		 INNER JOIN USER U
		    ON B.challenger = U.id
		 INNER JOIN MISSION M
		    ON M.id = B.mission_id
		  LEFT OUTER JOIN BETTING_HISTORY BH
		    ON B.id = BH.betting_id
		 WHERE B.id = #{bettingId}
	</select>
	<select id="selectOneBetting" parameterType="int" resultType="Betting">
		SELECT * FROM BETTING WHERE id = #{bettingId}
	</select>
	
	<insert id="insertBetting" parameterType="Betting">
		INSERT INTO BETTING (challenger, mission_id, mission_cnt,reg_date)
		VALUES (#{challenger}, #{missionId}, #{missionCnt}, current_timestamp())
	</insert>
	
	<insert id="addBetHistory" parameterType="BettingHistory">
		INSERT INTO BETTING_HISTORY (betting_id, player, point, choice)
		VALUES (#{bettingId}, #{player}, #{point}, #{choice})
	</insert>
	
	<update id="joinBetting" parameterType="Betting">
		UPDATE BETTING
		   SET success_cnt = #{successCnt}, fail_cnt = #{failCnt}, success_point = #{successPoint}, fail_point = #{failPoint}
		 WHERE id = #{id}
	</update>
	
	<update id="finishBetting" parameterType="Betting">
		UPDATE BETTING
		   SET result = #{result}
		 WHERE id = #{id}
	</update>
	
	<select id="selectOneBettingById" parameterType="int" resultType="Betting">
		SELECT * 
		  FROM BETTING
		 WHERE id = #{bettingId}
	</select>
	
	<update id="changeBettingStatusDone" parameterType="int">
		UPDATE BETTING
		   SET result = 2
		 WHERE id = #{id}
	</update>
	
	<select id="selectWinner" parameterType="Betting" resultType="BettingHistory">
		SELECT * FROM BETTING_HISTORY WHERE betting_id = #{id} AND choice = #{result}
	</select>
	
	<select id="selectBettingHistoryByUserId" parameterType="String" resultMap="BettingHistoryWithBettingInfo">
		SELECT bh.id, bh.player, bh.betting_id, bh.point, bh.choice, bh.prize, b.id betid, b.challenger, b.mission_id, b.mission_cnt, b.success_cnt, b.fail_cnt, b.success_point, b.fail_point, b.result, b.reg_date, u.id userid, u.name, m.id missionid, m.content
		  FROM BETTING_HISTORY bh
		 INNER JOIN BETTING b
		    ON b.id = bh.betting_id
		 INNER JOIN USER u
		    ON u.id = b.challenger
		 INNER JOIN MISSION m
		    ON m.id = b.mission_id
		 WHERE bh.player = #{id}
	</select>
	
	<select id="selectChallengerBettingHistory" parameterType="String" resultMap="BettingWithChallengerInfo">
		SELECT B.id, B.challenger, B.mission_id, B.mission_cnt, B.success_cnt, B.fail_cnt, B.success_point, B.fail_point, B.result, B.reg_date, U.id userid, U.campus, U.class_num, U.name, BH.id historyid, BH.point, BH.choice, M.id missionid, M.content
		  FROM BETTING B
		 INNER JOIN USER U
		    ON B.challenger = U.id
		 INNER JOIN MISSION M
		    ON M.id = B.mission_id
		  LEFT OUTER JOIN BETTING_HISTORY BH
		    ON B.id = BH.betting_id
		 WHERE B.challenger = #{id}
	</select>
	
	<insert id="createReview" parameterType="Review">
		INSERT INTO REVIEW (writer, content, reg_date, betting_id)
		VALUES (#{writer}, #{content}, current_timestamp(), #{bettingId})
	</insert>
	
	<delete id="deleteReview" parameterType="int">
		DELETE FROM REVIEW
		 WHERE id = #{id}
	</delete>
	
	<update id="updateReview" parameterType="Review">
		UPDATE REVIEW
		   SET content = #{content}, mod_date = current_timestamp()
		 WHERE id = #{id}
	</update>
	
	<select id="selectReviewList" parameterType="int" resultType="Review">
		SELECT R.id, R.writer, R.content, R.reg_date, R.mod_date, R.betting_id, U.name writerName 
		  FROM REVIEW R
		 INNER JOIN USER U
		    ON U.id = R.writer
		 WHERE betting_id = #{bettingId}
	</select>
	<update id="updateBettingHistoryPrize" parameterType="BettingHistory">
		UPDATE BETTING_HISTORY SET prize = #{prize} WHERE id = #{id}
	</update>
	
</mapper>