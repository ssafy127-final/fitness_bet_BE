<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.fitnessbet.user.model.dao.UserDao">
	<insert id="insertUser" parameterType="User">
		INSERT INTO user (id,pw,name,campus,class_num,gender,admin,phone)
		VALUES(#{id},#{pw},#{name},#{campus},#{classNum},#{gender},#{admin},#{phone})
	</insert>
	
	<select id="findById" parameterType="String" resultType="User">
		SELECT * from user 
		WHERE id = #{id};
	</select>

	<!-- 유저 삭제 / 관리자만 접근 가능하도록-->
	<delete id="deleteUser" parameterType="String">
		DELETE FROM user
		WHERE id = #{id};
	</delete>
	
	<!-- 반 별 모든 학생들 리스트 뽑기 -->
	<select id="selectAll" parameterType="User" resultType="User">
		SELECT * FROM user
		WHERE class_num = #{classNum}
		AND campus = #{campus};
	</select>
	
	<!-- 반 별 모든 학생들 수 반환 -->
	<select id="countAll" parameterType="User" resultType="int">
		SELECT count(*) FROM user
		WHERE class_num = #{classNum}
		AND campus = #{campus};
	</select>
	
	<!-- 가입 대기 목록 뽑기 / 가입대기는 accept 값이 항상 0이므로 파라미터 입력이 필요없다. -->
	<select id="selectUnapproved" resultType="User">
		SELECT * FROM user
		WHERE class_num = #{classNum}
		AND campus = #{campus}
		AND accept = 0;
	</select>
	
	<update id="updateAccepted" parameterType="String">
		UPDATE user SET accept = 1
		WHERE id = #{id};
	</update>
	
	<select id = "selectChallenger" parameterType="User" resultType="User">
		SELECT * FROM user
		WHERE class_num = #{classNum}
		AND campus = #{campus}
		LIMIT 1 OFFSET #{randomNum};
	</select>
	
	<update id="updateReward" parameterType="User">
	UPDATE user SET current_point = #{currentPoint}, total_point = #{totalPoint}
	WHERE id = #{id};
	</update>
	
	<update id="minusBettingPoint" parameterType="User">
	UPDATE user SET current_point = #{currentPoint}
	WHERE id = #{id};
	</update>
	
	<update id = "visitedCheck" parameterType="User">
	UPDATE user SET visited = CURRENT_DATE()
	WHERE id = #{id};
	</update>
	
	<insert id= "insertPointHistory" parameterType="PointHistory">
	INSERT INTO point_history (user_id, product_id, betting_id, category, record_date, point) VALUES
	(#{userId}, #{productId}, #{bettingId}, #{category}, now(), #{point})
	</insert>
	
	<select id="selectAllPointHistory" parameterType="String">
		SELECT * FROM POINT_HISTORY WHERE user_id = #{userId}
	</select>
	
	<select id = "selectWinCnt" parameterType="User" resultType="User">
	SELECT 
		u.id,
		u.name, 
		count(b.result IN (1,-1)) AS totalGames, 
		sum(CASE WHEN bh.choice = b.result THEN 1 ELSE 0 END) AS winGames, 
		u.total_point AS totalPoint, 
		u.current_point AS currentPoint
	FROM user u
	LEFT JOIN betting_history bh
	ON bh.player =u.id
	LEFT JOIN betting b
	ON b.id = bh.betting_id AND b.result IN (1, -1)
	WHERE u.campus = #{campus} AND u.class_num = #{classNum}
	GROUP BY u.id;
	</select>
		
</mapper> 