DROP DATABASE IF EXISTS fitnessbet;
CREATE DATABASE fitnessbet;
USE fitnessbet;

DROP TABLE IF EXISTS `USER`;
CREATE TABLE `USER` (
	`id`	VARCHAR(15)	NOT NULL,
	`pw`	VARCHAR(100)	NOT NULL,
	`name`	VARCHAR(50)	NOT NULL,
	`campus`	VARCHAR(20)	NOT NULL,
	`class_num`	int	NOT NULL,
	`current_point`	int	NOT NULL	DEFAULT 0,
	`total_point`	int	NOT NULL	DEFAULT 0,
	`visited`	date	NULL	COMMENT '저장되어 있는 데이터가 현재 날짜 이전이면 출석 전 (CURDATE())사용',
	`gender`	boolean	NOT NULL	COMMENT '여성 T / 남 F',
	`admin`	boolean	NOT NULL	DEFAULT false,
	`accept`	boolean	NOT NULL	DEFAULT false,
	`phone`	VARCHAR(20)	NOT NULL
);

DROP TABLE IF EXISTS `REVIEW`;

CREATE TABLE `REVIEW` (
	`id`	int	NOT NULL	COMMENT 'auto_increment',
	`writer`	VARCHAR(15)	NOT NULL	COMMENT 'USER 테이블의 id컬럼 참조',
	`content`	VARCHAR(500)	NOT NULL,
	`reg_date`	date	NOT NULL,
	`mod_date`	date	NULL,
	`like_cnt`	int	NOT NULL	DEFAULT 0,
	`del_yn`	boolean	NOT NULL	DEFAULT false	COMMENT '삭제 여부 확인',
	`parent_review_id`	int	NULL	COMMENT 'REVIEW 테이블의 id 컬럼 참조',
	`betting_id`	int	NOT NULL	COMMENT 'auto_increment'
);

DROP TABLE IF EXISTS `BETTING`;

CREATE TABLE `BETTING` (
	`id`	int	NOT NULL	COMMENT 'auto_increment',
	`challenger`	VARCHAR(15)	NOT NULL,
	`mission_id`	int	NOT NULL	COMMENT 'auto_increment',
    `mission_cnt` int	NOT NULL,
	`success_cnt`	int	NOT NULL	DEFAULT 0	COMMENT '미션 성공 배팅 수',
	`fail_cnt`	int	NOT NULL	DEFAULT 0	COMMENT '미션 실패 배팅 수',
	`success_point`	int	NOT NULL	DEFAULT 0,
	`fail_point`	int	NOT NULL	DEFAULT 0,
	`result`	int	,
	`reg_date`	date	NOT NULL
);

DROP TABLE IF EXISTS `MISSION`;

CREATE TABLE `MISSION` (
	`id`	int	NOT NULL	COMMENT 'auto_increment',
	`content`	VARCHAR(100)	NOT NULL,
	`min_m`	int	NOT NULL,
	`max_m`	int	NOT NULL,
	`min_w`	int	NOT NULL,
	`max_w`	int	NOT NULL
);

DROP TABLE IF EXISTS `BETTING_HISTORY`;

CREATE TABLE `BETTING_HISTORY` (
	`id`	int	NOT NULL	COMMENT 'auto_increment',
	`betting_id`	int	NOT NULL	COMMENT 'betting 테이블 id 참조',
	`player`	VARCHAR(15)	NOT NULL	COMMENT 'user테이블 id 참조',
	`point`	int	NOT NULL,
	`choice`	int	NOT NULL
);

DROP TABLE IF EXISTS `PRODUCT`;

CREATE TABLE `PRODUCT` (
	`id`	int	NOT NULL	COMMENT 'auto_increment',
	`name`	VARCHAR(100)	NOT NULL,
	`price`	int	NOT NULL,
	`img`	VARCHAR(2000)	NULL,
	`del_yn`	boolean	NOT NULL	DEFAULT false,
	`point`	int	NOT NULL
);

DROP TABLE IF EXISTS `PRODUCT_HISTORY`;

CREATE TABLE `PRODUCT_HISTORY` (
	`id`	int	NOT NULL	COMMENT 'auto_increment',
	`user`	VARCHAR(15)	NOT NULL	COMMENT 'user테이블의 id참조',
	`product`	int	NOT NULL	COMMENT 'product 테이블 id 참조',
	`date`	date	NOT NULL,
	`point`	int	NOT NULL
);

ALTER TABLE `USER` ADD CONSTRAINT `PK_USER` PRIMARY KEY (
	`id`
);

ALTER TABLE `REVIEW` ADD CONSTRAINT `PK_REVIEW` PRIMARY KEY (
	`id`
);

ALTER TABLE `BETTING` ADD CONSTRAINT `PK_BETTING` PRIMARY KEY (
	`id`
);

ALTER TABLE `MISSION` ADD CONSTRAINT `PK_MISSION` PRIMARY KEY (
	`id`
);

ALTER TABLE `BETTING_HISTORY` ADD CONSTRAINT `PK_BETTING_HISTORY` PRIMARY KEY (
	`id`
);

ALTER TABLE `PRODUCT` ADD CONSTRAINT `PK_PRODUCT` PRIMARY KEY (
	`id`
);

ALTER TABLE `PRODUCT_HISTORY` ADD CONSTRAINT `PK_PRODUCT_HISTORY` PRIMARY KEY (
	`id`
);

ALTER TABLE `REVIEW` ADD CONSTRAINT `FK_USER_TO_REVIEW_1` FOREIGN KEY (
	`writer`
)
REFERENCES `USER` (
	`id`
);

ALTER TABLE `REVIEW` ADD CONSTRAINT `FK_REVIEW_TO_REVIEW_1` FOREIGN KEY (
	`parent_review_id`
)
REFERENCES `REVIEW` (
	`id`
);

ALTER TABLE `REVIEW` ADD CONSTRAINT `FK_BETTING_TO_REVIEW_1` FOREIGN KEY (
	`betting_id`
)
REFERENCES `BETTING` (
	`id`
);

ALTER TABLE `BETTING` ADD CONSTRAINT `FK_USER_TO_BETTING_1` FOREIGN KEY (
	`challenger`
)
REFERENCES `USER` (
	`id`
);

ALTER TABLE `BETTING` ADD CONSTRAINT `FK_MISSION_TO_BETTING_1` FOREIGN KEY (
	`mission_id`
)
REFERENCES `MISSION` (
	`id`
);

ALTER TABLE `BETTING_HISTORY` ADD CONSTRAINT `FK_BETTING_TO_BETTING_HISTORY_1` FOREIGN KEY (
	`betting_id`
)
REFERENCES `BETTING` (
	`id`
);

ALTER TABLE `BETTING_HISTORY` ADD CONSTRAINT `FK_USER_TO_BETTING_HISTORY_1` FOREIGN KEY (
	`player`
)
REFERENCES `USER` (
	`id`
);

ALTER TABLE `PRODUCT_HISTORY` ADD CONSTRAINT `FK_USER_TO_PRODUCT_HISTORY_1` FOREIGN KEY (
	`user`
)
REFERENCES `USER` (
	`id`
);

ALTER TABLE `PRODUCT_HISTORY` ADD CONSTRAINT `FK_PRODUCT_TO_PRODUCT_HISTORY_1` FOREIGN KEY (
	`product`
)
REFERENCES `PRODUCT` (
	`id`
);

